<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=
	"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.0</version>
        <relativePath/>
	</parent>

	<groupId>de.springbootbuch</groupId>
	<artifactId>database_examples</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<build.datasource.url>
			jdbc:postgresql://localhost:5432/pagila
		</build.datasource.url>
		<build.datasource.username>spring</build.datasource.username>
		<build.datasource.password>spring</build.datasource.password>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.24.0</version>
					<configuration>
						<images>
							<image>
								<name>postgres:9.4</name>
								<alias>postgres-db</alias>
								<run>
									<env>
										<POSTGRES_USER>spring</POSTGRES_USER>
										<POSTGRES_PASSWORD>spring</POSTGRES_PASSWORD>
										<POSTGRES_DB>pagila</POSTGRES_DB>
									</env>
									<ports>
										<port>5432:5432</port>
									</ports>
									<wait>
										<log>(?s)database system is ready to accept connections.*database system is ready to accept connections</log>
										<time>40000</time>
									</wait>
								</run>
							</image>
						</images>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<url>${build.datasource.url}</url>
					<user>${build.datasource.username}</user>
					<password>${build.datasource.password}</password>
					<locations>
						<location>filesystem:src/main/resources/db/migration</location>
					</locations>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals><goal>generate</goal></goals>
					</execution>
				</executions>
				<configuration>
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>${build.datasource.url}</url>
						<user>${build.datasource.username}</user>
						<password>${build.datasource.password}</password>
					</jdbc>
					<generator>
						<database>
							<name>org.jooq.util.postgres.PostgresDatabase</name>
							<schemaVersionProvider>SELECT :schema_name || '_' || MAX("version") FROM "flyway_schema_history"</schemaVersionProvider>
							<includes>.*</includes>
							<excludes>schema_version</excludes>
							<schemata>
								<schema>
									<inputSchema>public</inputSchema>
									<outputSchemaToDefault>true</outputSchemaToDefault>
								</schema>
							</schemata>
						</database>
						<target>
							<packageName>de.springbootbuch.database_examples.jooq</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>
					spring-boot-maven-plugin
				</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<forkCount>1</forkCount>
					<reuseForks>true</reuseForks>
					<environmentVariables>
						<postgres.port>${postgres-db-it.port}</postgres.port>
						<spring.profiles.active>it</spring.profiles.active>
					</environmentVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>use-docker-for-it</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<!-- Runs before and after integration test -->
							<execution>
								<id>prepare-it-database</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<alias>postgres-db</alias>
											<run>
												<ports>
													<port>postgres-db-it.port:5432</port>
												</ports>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>remove-it-database</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
